{"version":3,"sources":["helpers/Validation.js","helpers/getJwt.js","components/login/LoginForm.js","components/login/Login.js","components/register/RegisterForm.js","components/register/Register.js","components/account/Buttons/Logout.js","components/account/Buttons/Add.js","components/account/Buttons/FindResults.js","components/account/Teacher/TeacherForm.js","components/account/Buttons/Cancel.js","helpers/printToPdf.js","helpers/clearString.js","components/account/Buttons/Print.js","components/account/Teacher/OrderedTest.js","components/account/Teacher/Teacher.js","components/account/Student/StudentHome.js","components/account/Student/Student.js","components/account/BlindStudent/BlindStudentHome.js","components/account/BlindStudent/BlindStudent.js","components/loading/Loading.js","components/account/Account.js","components/account/Buttons/Back.js","components/account/Teacher/AddQuestionForm.js","components/account/Teacher/AddQuestion.js","App.js","index.js"],"names":["registerState","isValid","errorLOGIN","errorPASSWORD","errorPASSWORD2","errorTYPE","errorUSERKEY","loginState","teacherState","errorAMOUNT","errorCATEGORY","questionState","errorBODY","errorANSWER_A","errorANSWER_B","errorANSWER_C","errorANSWER_D","errorANSWER_PROPER","findResultState","Validation","registerFormValidation","login","password","password2","type","userKey","length","loginFormValidation","teacherFormValidation","amount","category","isNaN","newQuestionValidation","body","answerA","answerB","answerC","answerD","properAnswer","findResultValidation","getJwt","sessionStorage","getItem","LoginForm","props","react_default","a","createElement","className","onSubmit","handleSubmit","id","name","placeholder","onChange","handleChange","error","success","react_router_dom","to","Login","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","e","setState","defineProperty","target","value","_ref","asyncToGenerator","regenerator_default","mark","_callee","_this$state","validation","loginProcess","wrap","_context","prev","next","preventDefault","axios","post","sent","data","done","message","setItem","token","setTimeout","history","push","stop","_x","inherits","createClass","key","login_LoginForm","Component","RegisterForm","handleSelectChange","hidden","Register","registerProcess","register_RegisterForm","Logout","handleClick","removeItem","onClick","withRouter","Add","FindResults","_isMounted","results","$","val","findingResultProcess","map","result","uuidv4","points","totalPoints","percent","date","TeacherForm","Buttons_Logout","Buttons_Add","Buttons_FindResults","Cancel","cancel","printToPdf","questionsArray","clearString","doc","jsPDF","setFontSize","pageHeight","internal","pageSize","height","getHeight","counter","x","removeDiacriticalMarks","content","splitTextToSize","pdfInMM","text","answerGap","addPage","image","imageUrl","btoa","Uint8Array","reduce","byte","String","fromCharCode","addImage","AremoveDiacriticalMarks","Acontent","BremoveDiacriticalMarks","Bcontent","CremoveDiacriticalMarks","Ccontent","DremoveDiacriticalMarks","Dcontent","save","str","replace","Print","print","questions","require","OrderedTest","orderedTest","organizeQuestions","array","i","j","Math","floor","random","temp","shuffleArray","question","_id","handleDeleteQuestion","src","alt","updatedQuestions","filter","click","update","_this2","socket","on","gettingNewestResultProcess","setResults","Buttons_Cancel","Buttons_Print","studentsList","Teacher","isGenerated","sendTest","emit","gettingTestProcess","io","students","blindStudents","arr","comp","final","indexOf","student","Teacher_OrderedTest","Teacher_TeacherForm","StudentHome","properAnswers","canReceiveTest","toConsumableArray","htmlFor","checkAnswers","indexes","studentAnswers","savedStudentAnswers","allAnswers","leadingZero","year","day","month","hours","minutes","seconds","currentDate","_x2","checked","time","style","background","Date","getFullYear","getDate","getMonth","getHours","getMinutes","getSeconds","round","disabled","prop","Student","Student_StudentHome","BlindStudentHome","userAnswer","currentQuestion","currentAnswer","isAnswered","canHear","canSpeak","speakTotalQuestions","speakTotalPoints","option","serveQuestion","test","getTime","speech","window","speechSynthesis","choiceMessage","SpeechSynthesisUtterance","keyboardOptionMessage","voiceOptionMessage","speak","messageBODY","messageANSWER_A","messageANSWER_B","messageANSWER_C","messageANSWER_D","voiceMessages","document","onkeyup","keyCode","alert","_points","_totalPoints","_currentDate","console","log","SpeechRecognition","webkitSpeechRecognition","recognition","lang","start","onend","onresult","_ref2","_callee2","transcript","lowerCaseTranscript","_points2","_totalPoints2","_currentDate2","_context2","toString","toLowerCase","BlindStudent","BlindStudent_BlindStudentHome","Loading","Account","_componentDidMount","jwt","gettingUserProcess","get","headers","Authorization","account_Teacher_Teacher","account_Student_Student","account_BlindStudent_BlindStudent","loading_Loading","Back","where","Buttons_Back","handleFileChange","marginBottom","marginTop","AddQuestion","errorIMAGEURL","files","config","savingTestProcess","FormData","append","content-type","AddQuestionForm","handleImage","App","react_router","exact","path","component","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.e5b55d6c.chunk.js","sourcesContent":["var registerState = {\r\n    isValid: false,\r\n    errorLOGIN: \"\",\r\n    errorPASSWORD: \"\",\r\n    errorPASSWORD2: \"\",\r\n    errorTYPE: \"\",\r\n    errorUSERKEY: \"\"\r\n}\r\n\r\nvar loginState = {\r\n    isValid: false,\r\n    errorLOGIN: \"\",\r\n    errorPASSWORD: \"\",\r\n}\r\n\r\nvar teacherState = {\r\n    isValid: false,\r\n    errorAMOUNT: \"\",\r\n    errorCATEGORY: \"\"\r\n}\r\n\r\nvar questionState = {\r\n    isValid: false,\r\n    errorBODY: \"\",\r\n    errorANSWER_A: \"\",\r\n    errorANSWER_B: \"\",\r\n    errorANSWER_C: \"\",\r\n    errorANSWER_D: \"\",\r\n    errorANSWER_PROPER: \"\",\r\n    errorCATEGORY: \"\",\r\n}\r\n\r\nvar findResultState = {\r\n    isValid: false,\r\n    \"errorLOGIN\": \"\"\r\n}\r\n\r\nclass Validation {\r\n\r\n    static registerFormValidation = (login, password, password2, type, userKey) => {\r\n        login === \"\" ? registerState.errorLOGIN = \"Login cannot be empty!\" : registerState.errorLOGIN = \"\";\r\n        login.length < 5 ? registerState.errorLOGIN = \"Login should be at least 5 characters long!\" : registerState.errorLOGIN = \"\";\r\n        password === \"\" ? registerState.errorPASSWORD = \"Password cannot be empty!\" : registerState.errorPASSWORD = \"\";\r\n        password.length < 5 ? registerState.errorPASSWORD = \"Password should be at least 5 characters long!\" : registerState.errorPASSWORD = \"\";\r\n        password2 !== password ? registerState.errorPASSWORD2 = \"Passwords don't match!\" : registerState.errorPASSWORD2 = \"\";\r\n        type === \"\" ? registerState.errorTYPE = \"Choose account type!\" : registerState.errorTYPE = \"\";\r\n        registerState.errorLOGIN === \"\" && registerState.errorPASSWORD === \"\" && registerState.errorPASSWORD2 === \"\" && registerState.errorTYPE === \"\" ? registerState.isValid = true : registerState.isValid = false\r\n        return registerState;\r\n    }\r\n\r\n    static loginFormValidation = (login, password) => {\r\n        login === \"\" ? loginState.errorLOGIN = \"Login cannot be empty!\" : loginState.errorLOGIN = \"\";\r\n        password === \"\" ? loginState.errorPASSWORD = \"Password cannot be empty!\" : loginState.errorPASSWORD = \"\";\r\n        login !== \"\" && password !== \"\" ? loginState.isValid = true : loginState.isValid = false\r\n        return loginState;\r\n    }\r\n\r\n    static teacherFormValidation = (amount, category) => {\r\n        amount === \"\" ? teacherState.errorAMOUNT = \"This field cannot be empty!\" : isNaN(amount) ? teacherState.errorAMOUNT = \"You cannot give letters here!\" : teacherState.errorAMOUNT = \"\";\r\n        category === \"\" ? teacherState.errorCATEGORY = \"You must choose category!\" : teacherState.errorCATEGORY = \"\";\r\n        teacherState.errorAMOUNT === \"\" && teacherState.errorCATEGORY === \"\" ? teacherState.isValid = true : teacherState.isValid = false;\r\n        return teacherState;\r\n    }\r\n\r\n    static newQuestionValidation = (body, answerA, answerB, answerC, answerD, properAnswer, category) => {\r\n        body === \"\" ? questionState.errorBODY = \"Question cannot be empty!\" : questionState.errorBODY = \"\";\r\n        answerA === \"\" ? questionState.errorANSWER_A = \"This answer cannot be empty!\" : questionState.errorANSWER_A = \"\";\r\n        answerB === \"\" ? questionState.errorANSWER_B = \"This answer cannot be empty!\" : questionState.errorANSWER_B = \"\";\r\n        answerC === \"\" ? questionState.errorANSWER_C = \"This answer cannot be empty!\" : questionState.errorANSWER_C = \"\";\r\n        answerD === \"\" ? questionState.errorANSWER_D = \"This answer cannot be empty!\" : questionState.errorANSWER_D = \"\";\r\n        properAnswer === \"\" ? questionState.errorANSWER_PROPER = \"Question must have its answer!\" : questionState.errorANSWER_PROPER = \"\";\r\n        category === \"\" ? questionState.errorCATEGORY = \"Choose category!\" : questionState.errorCATEGORY = \"\";\r\n        body !== \"\" && answerA !== \"\" && answerB !== \"\" && answerC !== \"\" && answerD !== \"\" && properAnswer !== \"\" && category !== \"\" ? questionState.isValid = true : questionState.isValid = false\r\n        return questionState;\r\n    }\r\n\r\n    static findResultValidation = (login) => {\r\n        login !== \"\" ? findResultState.errorLOGIN = \"\" : findResultState.errorLOGIN = \"Type your student login!\"\r\n        findResultState.errorLOGIN === \"\" ? findResultState.isValid = true : findResultState.isValid = false;\r\n        return findResultState;\r\n    }\r\n\r\n}\r\n\r\nexport default Validation","export const getJwt = () => {\r\n    return sessionStorage.getItem('jwt');\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <div className=\"center\">\r\n            <form className=\"form-group\" onSubmit={props.handleSubmit}>\r\n                <input id=\"login\" className=\"form-control\" name=\"login\" placeholder=\"Type your login...\" type=\"text\" onChange={props.handleChange} /> <br />\r\n                {props.errorLOGIN && <div className=\"alert alert-danger\">{props.errorLOGIN}</div>}\r\n                <input id=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Type your password...\" type=\"password\" onChange={props.handleChange} /> <br />\r\n                {props.errorPASSWORD && <div className=\"alert alert-danger\">{props.errorPASSWORD}</div>}\r\n                {props.error && <div className=\"alert alert-warning\">{props.error}</div>}\r\n                {props.success && <div className=\"alert alert-success\">{props.success}</div>}\r\n                <button type=\"submit\" className=\"btn btn-dark\">Login</button> <br />\r\n                <Link className=\"text-uppercase\" to=\"/register\">Do not have account? Register now!</Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nimport Validation from '../../helpers/Validation'\r\nimport { getJwt } from '../../helpers/getJwt'\r\n\r\nimport LoginForm from './LoginForm'\r\n\r\nexport class Login extends Component {\r\n    componentWillMount() {\r\n        getJwt() ? this.props.history.push('/account') : this.props.history.push('/')\r\n    }\r\n    state = {\r\n        login: \"\",\r\n        password: \"\",\r\n        errorLOGIN: \"\",\r\n        errorPASSWORD: \"\",\r\n        error: \"\",\r\n        success: \"\"\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = async (e) => {\r\n\r\n        e.preventDefault();\r\n        const { login, password } = this.state;\r\n        const validation = Validation.loginFormValidation(login, password);\r\n        this.setState(validation);\r\n        if (validation.isValid) {\r\n            const loginProcess = await axios.post('/login', {\r\n                login,\r\n                password,\r\n            })\r\n            loginProcess.data.done ? this.setState({ \"success\": loginProcess.data.message, \"error\": \"\" }) || sessionStorage.setItem('jwt', loginProcess.data.token) || setTimeout(() => {\r\n                this.props.history.push('/account')\r\n            }, 1000) : this.setState({ \"error\": loginProcess.data.message, \"success\": \"\" })\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"login flexfullwh\">\r\n                <LoginForm\r\n                    handleChange={this.handleChange}\r\n                    handleSubmit={this.handleSubmit}\r\n                    errorLOGIN={this.state.errorLOGIN}\r\n                    errorPASSWORD={this.state.errorPASSWORD}\r\n                    error={this.state.error}\r\n                    success={this.state.success}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst RegisterForm = (props) => {\r\n    return (\r\n        <div className=\"center\">\r\n            <form className=\"form-group\" onSubmit={props.handleSubmit}>\r\n                <input id=\"login\" className=\"form-control\" name=\"login\" placeholder=\"Type your login...\" type=\"text\" onChange={props.handleChange} /> <br />\r\n                {props.errorLOGIN && <div className=\"alert alert-danger\">{props.errorLOGIN}</div>}\r\n                <input id=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Type your password...\" type=\"password\" onChange={props.handleChange} /> <br />\r\n                {props.errorPASSWORD && <div className=\"alert alert-danger\">{props.errorPASSWORD}</div>}\r\n                <input id=\"password2\" className=\"form-control\" name=\"password2\" placeholder=\"Type your password again...\" type=\"password\" onChange={props.handleChange} /> <br />\r\n                {props.errorPASSWORD2 && <div className=\"alert alert-danger\">{props.errorPASSWORD2}</div>}\r\n                <select className=\"form-control\" onChange={props.handleSelectChange}>\r\n                    <option hidden>Choose account type...</option>\r\n                    <option name=\"type\" value=\"student\">Student</option>\r\n                    <option name=\"type\" value=\"blind-student\">Blind-Student</option>\r\n                    <option name=\"type\" value=\"blind-student\">Sand-Blind-Student</option>\r\n                    <option name=\"type\" value=\"teacher\">Teacher</option>\r\n                </select> <br />\r\n                {props.errorTYPE && <div className=\"alert alert-danger\">{props.errorTYPE}</div>}\r\n                <input id=\"userKey\" className=\"form-control\" name=\"userKey\" placeholder=\"Type user key...\" type=\"password\" onChange={props.handleChange} /> <br />\r\n                {props.errorUSERKEY && <div className=\"alert alert-danger\">{props.errorUSERKEY}</div>}\r\n                {props.error && <div className=\"alert alert-warning\">{props.error}</div>}\r\n                {props.success && <div className=\"alert alert-success\">{props.success}</div>}\r\n                <button type=\"submit\" className=\"btn btn-dark\">Register</button> <br />\r\n                <Link className=\"text-uppercase\" to=\"/\">Have already account? Log in!</Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterForm\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nimport Validation from '../../helpers/Validation'\r\nimport { getJwt } from '../../helpers/getJwt'\r\n\r\nimport RegisterForm from './RegisterForm'\r\n\r\nexport class Register extends Component {\r\n    componentWillMount() {\r\n        if (getJwt()) {\r\n            this.props.history.push('/account');\r\n        }\r\n    }\r\n    state = {\r\n        login: \"\",\r\n        password: \"\",\r\n        password2: \"\",\r\n        type: \"\",\r\n        userKey: \"\",\r\n        errorLOGIN: \"\",\r\n        errorPASSWORD: \"\",\r\n        errorPASSWORD2: \"\",\r\n        errorTYPE: \"\",\r\n        errorUSERKEY: \"\",\r\n        error: \"\",\r\n        success: \"\"\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    handleSelectChange = (e) => {\r\n        this.setState({\r\n            type: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = async (e) => {\r\n        this.setState({\r\n            error: \"\",\r\n            success: \"\"\r\n        })\r\n        e.preventDefault();\r\n        const { login, password, password2, type, userKey } = this.state;\r\n        const validation = Validation.registerFormValidation(login, password, password2, type, userKey);\r\n        this.setState(validation);\r\n        if (validation.isValid) {\r\n            const registerProcess = await axios.post('/register', {\r\n                login,\r\n                password,\r\n                type,\r\n                userKey\r\n            })\r\n            registerProcess.data.done ? this.setState({ \"success\": registerProcess.data.message, \"error\": \"\" }) || setTimeout(() => {\r\n                this.props.history.push('/')\r\n            }, 1000) : this.setState({ \"error\": registerProcess.data.message, \"success\": \"\" })\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"register flexfullwh\">\r\n                <RegisterForm\r\n                    handleChange={this.handleChange}\r\n                    handleSelectChange={this.handleSelectChange}\r\n                    handleSubmit={this.handleSubmit}\r\n                    errorLOGIN={this.state.errorLOGIN}\r\n                    errorPASSWORD={this.state.errorPASSWORD}\r\n                    errorPASSWORD2={this.state.errorPASSWORD2}\r\n                    errorTYPE={this.state.errorTYPE}\r\n                    errorUSERKEY={this.state.errorUSERKEY}\r\n                    error={this.state.error}\r\n                    success={this.state.success}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register\r\n","import React, { Component } from 'react'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nexport class Logout extends Component {\r\n    handleClick = () => {\r\n        sessionStorage.removeItem('jwt');\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        return (\r\n            <button className=\"logout btn btn-dark\" onClick={this.handleClick}>Logout</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Logout)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nexport class Add extends Component {\r\n    handleClick = () => {\r\n        this.props.history.push('/add');\r\n    }\r\n    render() {\r\n        return (\r\n            <button className=\"btn btn-dark\" onClick={this.handleClick}>Add question</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Add)\r\n","import React, { Component } from 'react'\r\n\r\nimport Validation from '../../../helpers/Validation'\r\nimport axios from 'axios'\r\nimport uuidv4 from 'uuid'\r\nimport $ from 'jquery'\r\n\r\nexport class FindResults extends Component {\r\n    _isMounted = false\r\n    state = {\r\n        login: \"\",\r\n        results: \"\",\r\n        errorLOGIN: \"\",\r\n        success: \"\",\r\n        error: \"\"\r\n    }\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            login: \"\",\r\n            results: \"\",\r\n            errorLOGIN: \"\",\r\n            success: \"\",\r\n            error: \"\"\r\n        })\r\n        $('#login').val('');\r\n    }\r\n    handleSubmit = async (e) => {\r\n        this.setState({\r\n            success: \"\",\r\n            error: \"\",\r\n            results: \"\"\r\n        })\r\n        e.preventDefault();\r\n        const { login } = this.state;\r\n        const validation = Validation.findResultValidation(login);\r\n        this.setState(validation);\r\n        if (validation.isValid) {\r\n            if (this._isMounted) {\r\n                const findingResultProcess = await axios.post('/getResult', {\r\n                    login\r\n                })\r\n                if (findingResultProcess.data.done) {\r\n                    const results = findingResultProcess.data.results.map(result => {\r\n                        return (\r\n                            <div className=\"foundResult\" key={uuidv4()}>\r\n                                <p><b>Student:</b> {result.login}</p>\r\n                                <p><b>Category:</b> {result.category}</p>\r\n                                <p><b>Points:</b> {result.points}/{result.totalPoints} {result.percent}</p>\r\n                                <p><b>Date:</b> {result.date}</p>\r\n                            </div>\r\n                        )\r\n                    })\r\n                    this.setState({\r\n                        results\r\n                    })\r\n                } else {\r\n                    this.setState({ \"error\": findingResultProcess.data.message, \"success\": \"\", results: \"\" });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"studentResult result-info\">\r\n                <form>\r\n                    <input id=\"login\" className=\"form-control findResultsInput\" name=\"login\" placeholder=\"Find your student's results...\" type=\"text\" onChange={this.handleChange} /> <br />\r\n                    {this.state.errorLOGIN && <div className=\"alert alert-danger\">{this.state.errorLOGIN}</div>}\r\n                    {this.state.error && <div className=\"alert alert-warning\">{this.state.error}</div>}\r\n                    <button className=\"btn btn-dark mr-1\" onClick={this.handleSubmit}>Find</button>\r\n                    <button className=\"btn btn-dark\" onClick={this.handleClick}>Cancel</button>\r\n                    <div>\r\n                        {this.state.results}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FindResults\r\n","import React, { Component } from 'react'\r\nimport Logout from '../Buttons/Logout'\r\nimport Add from '../Buttons/Add';\r\nimport FindResults from '../Buttons/FindResults';\r\n\r\nexport class TeacherForm extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"menu\">\r\n                <div className=\"menu-list\">\r\n                    <ul className=\"menu-items\">\r\n                        <div className=\"buttons\">\r\n                            <div className=\"welcome\">\r\n                                Welcome {this.props.login}\r\n                            </div>\r\n                            <li><Logout /></li>\r\n                            <li><Add /></li>\r\n                            <li><FindResults /></li>\r\n                        </div>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"center\">\r\n                    <form className=\"form-group\" onSubmit={this.props.handleSubmit}>\r\n                        <input id=\"amount\" className=\"form-control\" name=\"amount\" placeholder=\"How many questions you want to generate...\" type=\"text\" onChange={this.props.handleChange} /> <br />\r\n                        {this.props.errorAMOUNT && <div className=\"alert alert-danger\">{this.props.errorAMOUNT}</div>}\r\n                        <select className=\"form-control\" onChange={this.props.handleSelectChange}>\r\n                            <option hidden>Choose category...</option>\r\n                            <option name=\"category\" value=\"EE14\">EE14</option>\r\n                            <option name=\"category\" value=\"EE13\">EE13</option>\r\n                            <option name=\"category\" value=\"EE12\">EE12</option>\r\n                            <option name=\"category\" value=\"EE09\">EE09</option>\r\n                            <option name=\"category\" value=\"EE08\">EE08</option>\r\n                        </select> <br />\r\n                        {this.props.errorCATEGORY && <div className=\"alert alert-danger\">{this.props.errorCATEGORY}</div>}\r\n                        {this.props.error && <div className=\"alert alert-warning\">{this.props.error}</div>}\r\n                        {this.props.success && <div className=\"alert alert-success\">{this.props.success}</div>}\r\n                        <button type=\"submit\" className=\"btn btn-dark\">Submit</button> <br />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TeacherForm\r\n","import React, { Component } from 'react'\r\n\r\nexport class Cancel extends Component {\r\n    render() {\r\n        return (\r\n            <button className=\"cancel btn btn-dark\" onClick={this.props.cancel}>Cancel</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cancel\r\n","import jsPDF from 'jspdf'\r\n\r\nexport const printToPdf = function (questionsArray, clearString) {\r\n\r\n    var doc = new jsPDF('portrait', 'mm', 'a4');\r\n    var lMargin = 15; //left margin in mm\r\n    var rMargin = 15; //right margin in mm\r\n    var pdfInMM = 210;  // width of A4 in mm\r\n    var pageCenter = pdfInMM / 2;\r\n    doc.setFontSize(10);\r\n    var pageHeight = doc.internal.pageSize.height || doc.internal.pageSize.getHeight();\r\n    var height = 0;\r\n    var marginTop = 20;\r\n    height += marginTop;\r\n    var counter = 1;\r\n    var questionGap = 15;\r\n    var answerGap = 7;\r\n\r\n    for (var x = 0; x <= questionsArray.length - 1; x++) {\r\n\r\n        let body = counter + \": \" + questionsArray[x].body;\r\n        let removeDiacriticalMarks = clearString(body);\r\n        let content = doc.splitTextToSize(removeDiacriticalMarks, (pdfInMM - lMargin - rMargin));\r\n        doc.text(content, pageCenter, height, 'center');\r\n        height += answerGap + 5;\r\n\r\n        if (height > pageHeight - 30) {\r\n            height = 0;\r\n            height += marginTop;\r\n            doc.addPage();\r\n        }\r\n\r\n        if (questionsArray[x].image) {\r\n\r\n            let imageUrl = btoa(new Uint8Array(questionsArray[x].image.data.data).reduce(function (data, byte) {\r\n                return data + String.fromCharCode(byte);\r\n            }, ''));\r\n            doc.addImage(imageUrl, pageCenter / 2.6, height, 140, 50);\r\n            height += 60;\r\n\r\n            if (height > pageHeight - 60) {\r\n                height = 0;\r\n                height += marginTop;\r\n                doc.addPage();\r\n            }\r\n\r\n        }\r\n\r\n        if (height > pageHeight - 60) {\r\n            height = 0;\r\n            height += marginTop;\r\n            doc.addPage();\r\n        }\r\n\r\n        let answerA = \"A: \" + questionsArray[x].answerA;\r\n        let AremoveDiacriticalMarks = clearString(answerA);\r\n        let Acontent = doc.splitTextToSize(AremoveDiacriticalMarks, (pdfInMM - lMargin - rMargin));\r\n        doc.text(Acontent, pageCenter, height, 'center');\r\n        height += answerGap;\r\n\r\n        let answerB = \"B: \" + questionsArray[x].answerB;\r\n        let BremoveDiacriticalMarks = clearString(answerB);\r\n        let Bcontent = doc.splitTextToSize(BremoveDiacriticalMarks, (pdfInMM - lMargin - rMargin));\r\n        doc.text(Bcontent, pageCenter, height, 'center');\r\n        height += answerGap\r\n\r\n        let answerC = \"C: \" + questionsArray[x].answerC;\r\n        let CremoveDiacriticalMarks = clearString(answerC);\r\n        let Ccontent = doc.splitTextToSize(CremoveDiacriticalMarks, (pdfInMM - lMargin - rMargin));\r\n        doc.text(Ccontent, pageCenter, height, 'center');\r\n        height += answerGap;\r\n\r\n        let answerD = \"D: \" + questionsArray[x].answerD;\r\n        let DremoveDiacriticalMarks = clearString(answerD);\r\n        let Dcontent = doc.splitTextToSize(DremoveDiacriticalMarks, (pdfInMM - lMargin - rMargin));\r\n        doc.text(Dcontent, pageCenter, height, 'center');\r\n        height += questionGap;\r\n\r\n        if (height > pageHeight - (questionGap)) {\r\n            height = 0;\r\n            height += marginTop;\r\n            doc.addPage();\r\n        }\r\n        counter++;\r\n\r\n    }\r\n\r\n    doc.save(\"Generated test.pdf\");\r\n\r\n}","export const clearString = function (str) {\r\n    return str.replace(/ą/g, 'a').replace(/Ą/g, 'A')\r\n        .replace(/ć/g, 'c').replace(/Ć/g, 'C')\r\n        .replace(/ę/g, 'e').replace(/Ę/g, 'E')\r\n        .replace(/ł/g, 'l').replace(/Ł/g, 'L')\r\n        .replace(/ń/g, 'n').replace(/Ń/g, 'N')\r\n        .replace(/ó/g, 'o').replace(/Ó/g, 'O')\r\n        .replace(/ś/g, 's').replace(/Ś/g, 'S')\r\n        .replace(/ż/g, 'z').replace(/Ż/g, 'Z')\r\n        .replace(/ź/g, 'z').replace(/Ź/g, 'Z');\r\n}","import React, { Component } from 'react'\r\nimport { printToPdf } from '../../../helpers/printToPdf'\r\nimport { clearString } from '../../../helpers/clearString'\r\n\r\nexport class Print extends Component {\r\n    print = () => {\r\n        printToPdf(this.props.questions, clearString);\r\n    }\r\n    render() {\r\n        return (\r\n            <button className=\"btn btn-dark\" onClick={this.print}>Print to PDF</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Print\r\n","import React, { Component } from 'react'\r\nimport Logout from '../Buttons/Logout';\r\nimport Cancel from '../Buttons/Cancel';\r\nimport Add from '../Buttons/Add'\r\nimport Print from '../Buttons/Print'\r\nimport $ from 'jquery'\r\nimport axios from 'axios'\r\nimport FindResults from '../Buttons/FindResults';\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nexport class OrderedTest extends Component {\r\n    _isMounted = false;\r\n    state = {\r\n        questions: this.props.questions,\r\n        orderedTest: \"\",\r\n        results: \"\"\r\n    }\r\n    componentDidMount() {\r\n\r\n        this._isMounted = true;\r\n\r\n        function shuffleArray(array) {\r\n            for (var i = array.length - 1; i > 0; i--) {\r\n                var j = Math.floor(Math.random() * (i + 1));\r\n                var temp = array[i];\r\n                array[i] = array[j];\r\n                array[j] = temp;\r\n            }\r\n        }\r\n        shuffleArray(this.state.questions);\r\n\r\n        this.organizeQuestions(this.state.questions);\r\n\r\n        this.props.socket.on('sendResult', async (data) => {\r\n            if (this._isMounted) {\r\n                var gettingNewestResultProcess = await axios.post('/getNewestResult', {\r\n                    login: data.login\r\n                });\r\n            }\r\n            if (gettingNewestResultProcess) {\r\n                this.props.setResults(gettingNewestResultProcess.data);\r\n                const results = this.props.results.map(result => {\r\n                    return (\r\n                        <div className=\"result\" key={uuidv4()}>\r\n                            <p>Student <b>{result.login}</b> finished test!</p>\r\n                            <p><b>Category:</b> {result.category}</p>\r\n                            <p><b>Points:</b> {result.points}/{result.totalPoints} {result.percent}</p>\r\n                            <p><b>Date:</b> {result.date}</p>\r\n                        </div>\r\n                    )\r\n                })\r\n                this.setState({ results })\r\n            }\r\n        })\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n    organizeQuestions = (questions) => {\r\n\r\n        function shuffleArray(array) {\r\n            for (var i = array.length - 1; i > 0; i--) {\r\n                var j = Math.floor(Math.random() * (i + 1));\r\n                var temp = array[i];\r\n                array[i] = array[j];\r\n                array[j] = temp;\r\n            }\r\n        }\r\n        shuffleArray(questions);\r\n\r\n        let counter = 0;\r\n        const orderedTest = questions.map(question => {\r\n            counter++;\r\n            if ('image' in question) {\r\n                let imageUrl = btoa(new Uint8Array(question.image.data.data).reduce(function (data, byte) {\r\n                    return data + String.fromCharCode(byte);\r\n                }, ''));\r\n                question.imageUrl = imageUrl;\r\n            }\r\n            return (\r\n                <div className=\"question\" key={question._id} onClick={() => this.handleDeleteQuestion(question._id)}>\r\n                    {question.imageUrl && <img src={`data:image/jpeg;base64,${question.imageUrl}`} alt=\"question\" />}\r\n                    <div className=\"body alert alert-dark font-weight-bold\" > {counter + \". \" + question.body}</div >\r\n                    <div className=\"answer alert alert-success\">{\"A. \" + question.answerA}</div>\r\n                    <div className=\"answer alert alert-success\">{\"B. \" + question.answerB}</div>\r\n                    <div className=\"answer alert alert-success\">{\"C. \" + question.answerC}</div>\r\n                    <div className=\"answer alert alert-success\">{\"D. \" + question.answerD}</div>\r\n                </div>\r\n            )\r\n        })\r\n        this.setState({\r\n            orderedTest\r\n        });\r\n\r\n    }\r\n    handleDeleteQuestion = (id) => {\r\n\r\n        if (this._isMounted) {\r\n\r\n            const updatedQuestions = this.state.questions.filter(question => {\r\n                return question._id !== id\r\n            })\r\n            let counter = 0;\r\n            const orderedTest = updatedQuestions.map(question => {\r\n                counter++;\r\n                if ('image' in question) {\r\n                    let imageUrl = btoa(new Uint8Array(question.image.data.data).reduce(function (data, byte) {\r\n                        return data + String.fromCharCode(byte);\r\n                    }, ''));\r\n                    question.imageUrl = imageUrl;\r\n                }\r\n                return (\r\n                    <div className=\"question\" key={question._id} onClick={() => this.handleDeleteQuestion(question._id)}>\r\n                        {question.imageUrl && <img src={`data:image/jpeg;base64,${question.imageUrl}`} alt=\"question\" />}\r\n                        <div className=\"body alert alert-dark font-weight-bold\">{counter + \". \" + question.body}</div>\r\n                        <div className=\"answer alert alert-success\">{\"A. \" + question.answerA}</div>\r\n                        <div className=\"answer alert alert-success\">{\"B. \" + question.answerB}</div>\r\n                        <div className=\"answer alert alert-success\">{\"C. \" + question.answerC}</div>\r\n                        <div className=\"answer alert alert-success\">{\"D. \" + question.answerD}</div>\r\n                    </div>\r\n                )\r\n            })\r\n            if (this.state.questions.length === 1) {\r\n                $('.cancel').click();\r\n            }\r\n            this.setState({\r\n                questions: updatedQuestions,\r\n                orderedTest: orderedTest\r\n            });\r\n            this.props.update(updatedQuestions);\r\n\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"menu\">\r\n                <div className=\"menu-list\">\r\n                    <ul className=\"menu-items\">\r\n                        <div className=\"buttons\">\r\n                            <div className=\"welcome\">\r\n                                Welcome {this.props.login}\r\n                            </div>\r\n                            <li><Logout /></li>\r\n                            <li><Cancel cancel={this.props.cancel} /></li>\r\n                            <li><Add /></li>\r\n                            <li><Print questions={this.state.questions} /></li>\r\n                            <li><FindResults /></li>\r\n                        </div>\r\n                        <div className=\"info\">\r\n                            {this.props.studentsList !== \"\" && <div className=\"students\">\r\n                                {this.props.studentsList}\r\n                            </div>}\r\n                            {this.props.results !== \"\" && <div className=\"results\">\r\n                                {this.state.results}\r\n                            </div>}\r\n                        </div>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"questions center\">\r\n                    {this.state.orderedTest}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderedTest\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport Validation from '../../../helpers/Validation'\r\nimport TeacherForm from './TeacherForm'\r\nimport OrderedTest from './OrderedTest';\r\nimport io from 'socket.io-client'\r\n\r\nexport class Teacher extends Component {\r\n    state = {\r\n        socket: \"\",\r\n        studentsList: \"\",\r\n        results: [],\r\n        amount: \"\",\r\n        category: \"\",\r\n        questions: \"\",\r\n        errorAMOUNT: \"\",\r\n        errorCATEGORY: \"\",\r\n        error: \"\",\r\n        success: \"\",\r\n        isGenerated: false\r\n    }\r\n    componentWillMount() {\r\n        const socket = io('/teacher');\r\n        this.setState({ socket });\r\n    }\r\n    componentDidMount() {\r\n        this.state.socket.emit('login', {\r\n            login: this.props.login,\r\n            type: this.props.type\r\n        })\r\n        this.state.socket.emit('studentsList');\r\n        this.state.socket.on('studentsList', (students, blindStudents) => {\r\n            let studentsList = students.concat(blindStudents);\r\n            function getUnique(arr, comp) {\r\n                const unique = arr\r\n                    .map(e => e[comp])\r\n                    .map((e, i, final) => final.indexOf(e) === i && i)\r\n                    .filter(e => arr[e]).map(e => arr[e]);\r\n                return unique;\r\n            }\r\n            studentsList = getUnique(studentsList, 'login').map(student => {\r\n                return (\r\n                    <li className=\"student\" key={student.id} onClick={() => this.sendTest(student.login, this.state.questions)}>{student.login}</li>\r\n                )\r\n            });\r\n            this.setState({ studentsList });\r\n        })\r\n    }\r\n    componentWillUnmount() {\r\n        this.state.socket.emit('logout', {\r\n            login: this.props.login,\r\n            type: this.props.type\r\n        })\r\n    }\r\n    sendTest = (login, questions) => {\r\n        this.state.socket.emit('sendTest', login, questions);\r\n    }\r\n    setResults = (results) => {\r\n        this.state.results.push(results);\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    handleSelectChange = (e) => {\r\n        this.setState({\r\n            category: e.target.value\r\n        })\r\n    }\r\n    cancel = () => {\r\n        this.setState({\r\n            amount: \"\",\r\n            category: \"\",\r\n            questions: \"\",\r\n            isGenerated: false\r\n        })\r\n    }\r\n    update = (questions) => {\r\n        this.setState({\r\n            questions\r\n        })\r\n    }\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const { amount, category } = this.state\r\n        const validation = Validation.teacherFormValidation(amount, category);\r\n        this.setState(validation);\r\n        if (validation.isValid) {\r\n            const gettingTestProcess = await axios.post('/getTest', {\r\n                amount,\r\n                category\r\n            })\r\n            gettingTestProcess.data.done ? this.setState({ \"questions\": gettingTestProcess.data.questions, \"error\": \"\", success: \"\", isGenerated: true }) : this.setState({ \"error\": gettingTestProcess.data.message, \"success\": \"\", \"questions\": \"\" });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"teacher flexfullwh\">\r\n                {!this.state.isGenerated ? <TeacherForm\r\n                    handleSubmit={this.handleSubmit}\r\n                    handleChange={this.handleChange}\r\n                    handleSelectChange={this.handleSelectChange}\r\n                    errorAMOUNT={this.state.errorAMOUNT}\r\n                    errorCATEGORY={this.state.errorCATEGORY}\r\n                    error={this.state.error}\r\n                    success={this.state.success}\r\n                    login={this.props.login}\r\n                /> : <OrderedTest socket={this.state.socket} login={this.props.login} setResults={this.setResults} results={this.state.results} questions={this.state.questions} studentsList={this.state.studentsList} sendTest={this.sendTest} cancel={this.cancel} update={this.update} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Teacher\r\n","import React, { Component } from 'react'\r\nimport Logout from '../Buttons/Logout'\r\nimport $ from 'jquery'\r\nimport axios from 'axios';\r\n\r\nexport class StudentHome extends Component {\r\n    _isMounted = false;\r\n    state = {\r\n        questions: \"\",\r\n        orderedTest: \"\",\r\n        properAnswers: [],\r\n        login: this.props.login,\r\n        category: \"\",\r\n        points: \"\",\r\n        percent: \"\",\r\n        error: \"\",\r\n        canReceiveTest: true\r\n    }\r\n    componentDidMount() {\r\n\r\n        this._isMounted = true;\r\n\r\n        this.props.socket.on('sendTest', (questions) => {\r\n\r\n            $('.submit').prop(\"disabled\", false);\r\n\r\n            if (this.state.canReceiveTest) {\r\n                this.setState({\r\n                    questions: \"\",\r\n                    orderedTest: \"\",\r\n                    properAnswers: [],\r\n                    category: \"\",\r\n                    points: \"\",\r\n                    percent: \"\",\r\n                    error: \"\",\r\n                })\r\n            }\r\n\r\n            function shuffleArray(array) {\r\n                for (var i = array.length - 1; i > 0; i--) {\r\n                    var j = Math.floor(Math.random() * (i + 1));\r\n                    var temp = array[i];\r\n                    array[i] = array[j];\r\n                    array[j] = temp;\r\n                }\r\n            }\r\n            shuffleArray(questions);\r\n\r\n            if (this._isMounted === true) {\r\n                if (this.state.canReceiveTest) {\r\n                    this.setState({ questions, category: questions[0].category, properAnswers: [] });\r\n                    this.organizeQuestions(this.state.questions);\r\n                    this.setState({\r\n                        canReceiveTest: false\r\n                    })\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n    organizeQuestions = (questions) => {\r\n        let counter = 0;\r\n        const orderedTest = questions.map(question => {\r\n            this.setState({ properAnswers: [...this.state.properAnswers, question.properAnswer] });\r\n            counter++;\r\n            if ('image' in question) {\r\n                let imageUrl = btoa(new Uint8Array(question.image.data.data).reduce(function (data, byte) {\r\n                    return data + String.fromCharCode(byte);\r\n                }, ''));\r\n                question.imageUrl = imageUrl;\r\n            }\r\n            return (\r\n                <div className=\"question studentQuestion\" key={question._id}>\r\n                    {question.imageUrl && <img src={`data:image/jpeg;base64,${question.imageUrl}`} alt=\"question\" />}\r\n                    <div className=\"body alert alert-dark font-weight-bold\">{counter + \". \" + question.body}</div>\r\n                    <input id={`answerRadio1${question._id}`} type=\"radio\" name={question._id} className=\"answerRadio\" value=\"A\" />\r\n                    <label htmlFor={`answerRadio1${question._id}`} className=\"label questionLabel\">\r\n                        <div className=\"answer studentAnswer alert alert-success\">\r\n                            {\"A. \" + question.answerA}\r\n                        </div>\r\n                    </label>\r\n                    <input id={`answerRadio2${question._id}`} type=\"radio\" name={question._id} className=\"answerRadio\" value=\"B\" />\r\n                    <label htmlFor={`answerRadio2${question._id}`} className=\"label questionLabel\">\r\n                        <div className=\"answer studentAnswer alert alert-success\">\r\n                            {\"B. \" + question.answerB}\r\n                        </div>\r\n                    </label>\r\n                    <input id={`answerRadio3${question._id}`} type=\"radio\" name={question._id} className=\"answerRadio\" value=\"C\" />\r\n                    <label htmlFor={`answerRadio3${question._id}`} className=\"label questionLabel\">\r\n                        <div className=\"answer studentAnswer alert alert-success\">\r\n                            {\"C. \" + question.answerC}\r\n                        </div>\r\n                    </label>\r\n                    <input id={`answerRadio4${question._id}`} type=\"radio\" name={question._id} className=\"answerRadio\" value=\"D\" />\r\n                    <label htmlFor={`answerRadio4${question._id}`} className=\"label questionLabel\">\r\n                        <div className=\"answer studentAnswer alert alert-success\">\r\n                            {\"D. \" + question.answerD}\r\n                        </div>\r\n                    </label>\r\n                </div>\r\n            )\r\n        })\r\n        this.setState({\r\n            orderedTest\r\n        });\r\n    }\r\n    checkAnswers = async () => {\r\n\r\n        const indexes = [];\r\n        const studentAnswers = $('.answerRadio');\r\n        const savedStudentAnswers = [];\r\n        const allAnswers = $('.answer');\r\n        let points = 0;\r\n\r\n        for (let x = 0; x < studentAnswers.length; x++) {\r\n            if (studentAnswers[x].checked) {\r\n                indexes.push(x);\r\n                savedStudentAnswers.push(studentAnswers[x].value);\r\n            }\r\n        }\r\n\r\n        if (savedStudentAnswers.length === this.state.properAnswers.length) {\r\n\r\n            for (let x = 0; x < savedStudentAnswers.length; x++) {\r\n\r\n                /* console.log(`${savedStudentAnswers[x]} compared to ${this.state.properAnswers[x]}`); */\r\n                if (savedStudentAnswers[x] === this.state.properAnswers[x]) {\r\n                    allAnswers[indexes[x]].style.background = 'green'\r\n                    points++;\r\n                } else {\r\n                    allAnswers[indexes[x]].style.background = 'red'\r\n                }\r\n\r\n            }\r\n\r\n            function leadingZero(time) {\r\n                return (time < 10 ? '0' : '') + time;\r\n            }\r\n\r\n            const date = new Date();\r\n            const year = date.getFullYear();\r\n            const day = leadingZero(date.getDate());\r\n            const month = leadingZero((date.getMonth() + 1));\r\n            const hours = leadingZero(date.getHours());\r\n            const minutes = leadingZero(date.getMinutes());\r\n            const seconds = leadingZero(date.getSeconds());\r\n            const currentDate = year + \"-\" + month + \"-\" + day + \" \" + hours + \":\" + minutes + \":\" + seconds;\r\n\r\n            if (this._isMounted) {\r\n\r\n                const savingResultProcess = await axios.post('/saveResult', {\r\n                    login: this.state.login,\r\n                    category: this.state.category,\r\n                    points: points,\r\n                    totalPoints: this.state.questions.length,\r\n                    percent: Math.round((points / this.state.questions.length) * 100) + '%',\r\n                    date: currentDate\r\n                })\r\n\r\n                savingResultProcess.data.done && this.props.socket.emit('sendResult', {\r\n                    login: this.state.login,\r\n                })\r\n\r\n            }\r\n\r\n            this.setState({\r\n                canReceiveTest: true,\r\n                points: points,\r\n                percent: Math.round((points / this.state.questions.length) * 100) + '%'\r\n            })\r\n\r\n            for (let x = 0; x < studentAnswers.length; x++) {\r\n                studentAnswers[x].disabled = true;\r\n            }\r\n\r\n            $('.submit').prop(\"disabled\", true);\r\n\r\n        } else {\r\n            this.setState({\r\n                error: \"You have to give answer to all the questions\"\r\n            })\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"menu\">\r\n                <div className=\"menu-list\">\r\n                    <ul className=\"menu-items\">\r\n                        <div className=\"buttons\">\r\n                            <div className=\"welcome\">\r\n                                Welcome {this.props.login}\r\n                            </div>\r\n                            <li><Logout /></li>\r\n                            {this.state.points !== \"\" && <li className=\"pointResult\">Uzyskałeś {this.state.points}/{this.state.questions.length} punktów - {this.state.percent}</li>}\r\n                        </div>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"questions center\">\r\n                    {this.state.orderedTest ? <div>\r\n                        {this.state.orderedTest}\r\n                        {this.state.error && <div className=\"alert alert-warning\">{this.state.error}</div>}\r\n                        <button className=\"btn btn-dark submit\" onClick={this.checkAnswers}>Submit answers</button>\r\n                    </div> : <div>Please wait...</div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StudentHome\r\n","import React, { Component } from 'react'\r\nimport io from 'socket.io-client'\r\nimport StudentHome from './StudentHome';\r\n\r\nexport class Student extends Component {\r\n    state = {\r\n        socket: \"\",\r\n    }\r\n    componentWillMount() {\r\n        const socket = io('/student');\r\n        this.setState({ socket });\r\n    }\r\n    componentDidMount() {\r\n        this.state.socket.emit('login', {\r\n            login: this.props.login,\r\n            type: this.props.type\r\n        })\r\n    }\r\n    componentWillUnmount() {\r\n        this.state.socket.emit('logout', {\r\n            login: this.props.login,\r\n            type: this.props.type\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"student flexfullwh\">\r\n                <StudentHome socket={this.state.socket} login={this.props.login} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Student\r\n","import React, { Component } from 'react'\r\n\r\nimport Logout from '../Buttons/Logout'\r\nimport axios from 'axios'\r\n\r\nexport class BlindStudentHome extends Component {\r\n    _isMounted = false;\r\n    state = {\r\n        login: this.props.login,\r\n        body: \"\",\r\n        answerA: \"\",\r\n        answerB: \"\",\r\n        answerC: \"\",\r\n        answerD: \"\",\r\n        properAnswer: \"\",\r\n        category: \"\",\r\n        userAnswer: \"\",\r\n        points: 0,\r\n        totalPoints: 0,\r\n        currentQuestion: 0,\r\n        currentAnswer: 0,\r\n        isAnswered: false,\r\n        canReceiveTest: true,\r\n        canHear: true,\r\n        canSpeak: \"\",\r\n        speakTotalQuestions: \"\",\r\n        speakTotalPoints: \"\",\r\n        option: \"\"\r\n    }\r\n    serveQuestion = (test) => {\r\n\r\n        if (this.state.canReceiveTest) {\r\n            this.setState({\r\n                canSpeak: true,\r\n                canReceiveTest: false\r\n            })\r\n        }\r\n\r\n        function leadingZero(time) {\r\n            return (time < 10 ? '0' : '') + time;\r\n        }\r\n\r\n        function getTime() {\r\n            let date = new Date();\r\n            let year = date.getFullYear();\r\n            let day = leadingZero(date.getDate());\r\n            let month = leadingZero((date.getMonth() + 1));\r\n            let hours = leadingZero(date.getHours());\r\n            let minutes = leadingZero(date.getMinutes());\r\n            let seconds = leadingZero(date.getSeconds());\r\n            return year + \"-\" + month + \"-\" + day + \" \" + hours + \":\" + minutes + \":\" + seconds;\r\n        }\r\n\r\n        let speech = window.speechSynthesis;\r\n\r\n        this.setState({\r\n            totalPoints: test.length\r\n        })\r\n\r\n        if (this.state.totalPoints === 1) {\r\n            this.setState({\r\n                speakTotalQuestions: \"pytanie\",\r\n                speakTotalPoints: \"punkt\"\r\n            })\r\n        } else if (this.state.totalPoints === 2) {\r\n            this.setState({\r\n                speakTotalQuestions: \"pytania\",\r\n                speakTotalPoints: \"punkty\"\r\n            })\r\n        } else if (this.state.totalPoints === 3) {\r\n            this.setState({\r\n                speakTotalQuestions: \"pytania\",\r\n                speakTotalPoints: \"punkty\"\r\n            })\r\n        } else if (this.state.totalPoints === 4) {\r\n            this.setState({\r\n                speakTotalQuestions: \"pytania\",\r\n                speakTotalPoints: \"punkty\"\r\n            })\r\n        } else {\r\n            this.setState({\r\n                speakTotalQuestions: \"pytań\",\r\n                speakTotalPoints: \"punktów\"\r\n            })\r\n        }\r\n\r\n        let choiceMessage = new SpeechSynthesisUtterance(\r\n            `Wybierz proszę sposób rozwiązywania testu.\r\n            Kliknij jedynkę na klawiaturze numerycznej górnej aby rozwiązywać test za pomocą klawiatury \r\n            lub kliknij dwójkę na klawiaturze numerycznej górnej aby używać własnej mowy`\r\n        )\r\n\r\n        let keyboardOptionMessage = new SpeechSynthesisUtterance(\r\n            `Witaj! Twój nauczyciel wylosował Ci ${test.length} ${this.state.speakTotalQuestions}.\r\n                Aby odsłuchać wiadomość powitalną ponownie naciśnij klawisz R\r\n                Aby rozpocząć test odsłuchaj pierwsze pytanie klikając spację.\r\n                Po zatwierdzeniu każdej udzielonej odpowiedzi otrzymasz informację czy była ona błędna czy poprawna. Kolejne pytanie wywołaj klawiszem spacja.\r\n                Aby poruszać się pomiędzy odpowiedziami steruj klawiszami W oraz S. \r\n                Aby wybrać odpowiedź klikaj odpowiednio klawisze A, B, C lub D. \r\n                Aby zatwierdzić swoją odpowiedź kliknij klawisz ENTER.\r\n                Aby przerwać mój głos użyj klawisza X.\r\n                Gdy test dobiegnie końca zostaniesz o tym poinformowany!`\r\n        );\r\n\r\n        let voiceOptionMessage = new SpeechSynthesisUtterance(\r\n            `Witaj! Twój nauczyciel wylosował Ci ${test.length} ${this.state.speakTotalQuestions}.\r\n                Aby korzystać z funkcji sterowania głosem musisz mówić płynnie i wyraźnie. W przypadku nieuzyskania żadnej odpowiedzi kliknij ponownie F i powiedz komendę.\r\n                Aby odsłuchać wiadomość powitalną ponownie naciśnij F na klawiaturze i powiedz \"instrukcja\".\r\n                Aby rozpocząć test odsłuchaj pierwsze pytanie klikając F na klawiaturze i powiedz \"pytanie\". \r\n                Po zatwierdzeniu każdej udzielonej odpowiedzi otrzymasz informację czy była ona błędna czy poprawna. Kolejne pytanie wywołaj klikając przycisk F i powiedz \"pytanie\".\r\n                Aby poruszać się pomiędzy odpowiedziami kliknij F i powiedz \"kolejna odpowiedź\" lub \"poprzednia odpowiedź\". \r\n                Aby wybrać odpowiedź kliknij klawisz F i powiedz odpowiednio \"odpowiedź a\", \"odpowiedź b\", \"odpowiedź c\", \"odpowiedź d\". \r\n                Aby zatwierdzić swoją odpowiedź kliknij klawisz F i powiedz \"zatwierdź\".\r\n                Gdy po kliknięciu klawisza F i powiedzenia poprawnej komendy nie usłyszysz żadnej odpowiedzi, musisz powtórzyć kliknięcie F oraz powiedzenie komendy na nowo.\r\n                Gdy test dobiegnie końca zostaniesz o tym poinformowany!`\r\n        );\r\n\r\n        if (this.state.currentQuestion === 0) {\r\n            setTimeout(() => {\r\n                speech.speak(choiceMessage);\r\n            }, 500);\r\n        }\r\n\r\n        if (this.state.currentQuestion <= test.length - 1) {\r\n\r\n            this.setState({\r\n                body: test[this.state.currentQuestion].body,\r\n                answerA: test[this.state.currentQuestion].answerA,\r\n                answerB: test[this.state.currentQuestion].answerB,\r\n                answerC: test[this.state.currentQuestion].answerC,\r\n                answerD: test[this.state.currentQuestion].answerD,\r\n                properAnswer: test[this.state.currentQuestion].properAnswer,\r\n                category: test[0].category,\r\n                totalPoints: test.length\r\n            })\r\n\r\n            let messageBODY = new SpeechSynthesisUtterance(`Pytanie ${this.state.currentQuestion + 1}` + this.state.body);\r\n            let messageANSWER_A = new SpeechSynthesisUtterance('Odpowiedź A : ' + this.state.answerA);\r\n            let messageANSWER_B = new SpeechSynthesisUtterance('Odpowiedź B : ' + this.state.answerB);\r\n            let messageANSWER_C = new SpeechSynthesisUtterance('Odpowiedź C : ' + this.state.answerC);\r\n            let messageANSWER_D = new SpeechSynthesisUtterance('Odpowiedź D : ' + this.state.answerD);\r\n\r\n            let voiceMessages = [];\r\n            voiceMessages.push(messageBODY);\r\n            voiceMessages.push(messageANSWER_A);\r\n            voiceMessages.push(messageANSWER_B);\r\n            voiceMessages.push(messageANSWER_C);\r\n            voiceMessages.push(messageANSWER_D);\r\n\r\n            document.body.onkeyup = (e) => {\r\n\r\n                if (e.keyCode === 49) {\r\n\r\n                    let alert = new SpeechSynthesisUtterance('Wybrałeś rozwiązywanie za pomocą klawiatury');\r\n                    speech.cancel();\r\n                    setTimeout(() => {\r\n                        speech.speak(alert);\r\n                    }, 500);\r\n\r\n                    this.setState({\r\n                        option: \"keyboard\"\r\n                    })\r\n                }\r\n\r\n                if (e.keyCode === 50) {\r\n\r\n                    let alert = new SpeechSynthesisUtterance('Wybrałeś rozwiązywanie za pomocą głosu');\r\n                    speech.cancel();\r\n                    setTimeout(() => {\r\n                        speech.speak(alert);\r\n                    }, 500);\r\n\r\n                    this.setState({\r\n                        option: \"voice\"\r\n                    })\r\n                }\r\n\r\n                if (this.state.option === \"keyboard\") {\r\n\r\n                    if (this.state.currentQuestion === 0) {\r\n                        setTimeout(() => {\r\n                            speech.speak(keyboardOptionMessage);\r\n                        }, 500);\r\n                    }\r\n\r\n                    document.body.onkeyup = async (e) => {\r\n\r\n                        if (this.state.canSpeak) {\r\n\r\n                            if (e.keyCode === 32) {\r\n                                speech.cancel();\r\n                                setTimeout(() => {\r\n                                    speech.speak(voiceMessages[0]);\r\n                                }, 500);\r\n                            }\r\n                            if (e.keyCode === 87) {\r\n                                this.setState({\r\n                                    currentAnswer: this.state.currentAnswer + 1\r\n                                })\r\n                                console.log(this.state.currentAnswer);\r\n                                if (this.state.currentAnswer === 1) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(messageANSWER_A);\r\n                                    }, 500);\r\n                                }\r\n                                else if (this.state.currentAnswer === 2) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(messageANSWER_B);\r\n                                    }, 500);\r\n                                }\r\n                                else if (this.state.currentAnswer === 3) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(messageANSWER_C);\r\n                                    }, 500);\r\n                                }\r\n                                else if (this.state.currentAnswer === 4) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(messageANSWER_D);\r\n                                    }, 500);\r\n                                } else {\r\n                                    if (this.state.currentAnswer > 4) {\r\n                                        speech.cancel();\r\n                                        setTimeout(() => {\r\n                                            speech.speak(messageANSWER_A);\r\n                                        }, 500);\r\n                                        this.setState({\r\n                                            currentAnswer: 1\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (e.keyCode === 83) {\r\n                                this.setState({\r\n                                    currentAnswer: this.state.currentAnswer - 1\r\n                                })\r\n                                console.log(this.state.currentAnswer);\r\n                                if (this.state.currentAnswer === 1) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(messageANSWER_A);\r\n                                    }, 500);\r\n                                }\r\n                                else if (this.state.currentAnswer === 2) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(messageANSWER_B);\r\n                                    }, 500);\r\n                                }\r\n                                else if (this.state.currentAnswer === 3) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(messageANSWER_C);\r\n                                    }, 500);\r\n                                }\r\n                                else if (this.state.currentAnswer === 4) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(messageANSWER_D);\r\n                                    }, 500);\r\n                                } else {\r\n                                    if (this.state.currentAnswer < 1) {\r\n                                        speech.cancel();\r\n                                        setTimeout(() => {\r\n                                            speech.speak(messageANSWER_A);\r\n                                        }, 500);\r\n                                        this.setState({\r\n                                            currentAnswer: 1\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (e.keyCode === 65) {\r\n                                speech.cancel();\r\n                                this.setState({\r\n                                    userAnswer: 'A',\r\n                                    isAnswered: true\r\n                                })\r\n                                setTimeout(() => {\r\n                                    speech.speak(new SpeechSynthesisUtterance('Wybrałeś odpowiedź A, kliknij enter aby zatwierdzić odpowiedź'));\r\n                                }, 500);\r\n                            }\r\n                            if (e.keyCode === 66) {\r\n                                speech.cancel();\r\n                                this.setState({\r\n                                    userAnswer: 'B',\r\n                                    isAnswered: true\r\n                                })\r\n                                setTimeout(() => {\r\n                                    speech.speak(new SpeechSynthesisUtterance('Wybrałeś odpowiedź B, kliknij enter aby zatwierdzić odpowiedź'));\r\n                                }, 500);\r\n                            }\r\n                            if (e.keyCode === 67) {\r\n                                speech.cancel();\r\n                                this.setState({\r\n                                    userAnswer: 'C',\r\n                                    isAnswered: true\r\n                                })\r\n                                setTimeout(() => {\r\n                                    speech.speak(new SpeechSynthesisUtterance('Wybrałeś odpowiedź C, kliknij enter aby zatwierdzić odpowiedź'));\r\n                                }, 500);\r\n                            }\r\n                            if (e.keyCode === 68) {\r\n                                speech.cancel();\r\n                                this.setState({\r\n                                    userAnswer: 'D',\r\n                                    isAnswered: true\r\n                                })\r\n                                setTimeout(() => {\r\n                                    speech.speak(new SpeechSynthesisUtterance('Wybrałeś odpowiedź D, kliknij enter aby zatwierdzić odpowiedź'));\r\n                                }, 500);\r\n                            }\r\n\r\n                            if (e.keyCode === 82) {\r\n                                speech.cancel();\r\n                                setTimeout(() => {\r\n                                    speech.speak(keyboardOptionMessage);\r\n                                }, 500);\r\n                            }\r\n\r\n                        } else {\r\n                            if (e.keyCode === 82) {\r\n                                speech.cancel();\r\n                                setTimeout(() => {\r\n                                    speech.speak(new SpeechSynthesisUtterance('Test dobiegł końca. Interakcja z testem została zablokowana!'));\r\n                                }, 500);\r\n                            }\r\n                        }\r\n                        if (e.keyCode === 88) {\r\n                            speech.cancel();\r\n                        }\r\n                        if (this.state.isAnswered) {\r\n                            if (e.keyCode === 13) {\r\n                                if (this.state.userAnswer === this.state.properAnswer) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(new SpeechSynthesisUtterance('Poprawna odpowiedź.'));\r\n                                    }, 500);\r\n                                    this.setState({\r\n                                        points: this.state.points + 1,\r\n                                        currentQuestion: this.state.currentQuestion + 1,\r\n                                        isAnswered: false\r\n                                    })\r\n                                    if (this.state.currentQuestion <= test.length - 1) {\r\n                                        speech.cancel();\r\n                                        setTimeout(() => {\r\n                                            speech.speak(new SpeechSynthesisUtterance('Kliknij spację aby usłyszeć kolejne pytanie'));\r\n                                        }, 500);\r\n                                        this.serveQuestion(test);\r\n                                    } else {\r\n                                        this.setState({\r\n                                            currentQuestion: this.state.currentQuestion - 1\r\n                                        })\r\n                                        speech.cancel();\r\n                                        let points = this.state.points;\r\n                                        let totalPoints = test.length;\r\n                                        setTimeout(() => {\r\n                                            speech.speak(new SpeechSynthesisUtterance(`Koniec testu. Twój wynik to ${points} na ${totalPoints} ${this.state.speakTotalPoints}. Wynik został przesłany do nauczyciela. Interakcja z testem została zablokowana!`));\r\n                                        }, 500);\r\n                                        let currentDate = getTime();\r\n                                        if (this._isMounted) {\r\n                                            let savingResultProcess = await axios.post('/saveResult', {\r\n                                                login: this.state.login,\r\n                                                category: this.state.category,\r\n                                                points: this.state.points,\r\n                                                totalPoints: totalPoints,\r\n                                                percent: Math.round((this.state.points / test.length) * 100) + '%',\r\n                                                date: currentDate\r\n                                            })\r\n                                            savingResultProcess.data.done && this.props.socket.emit('sendResult', {\r\n                                                login: this.state.login,\r\n                                            })\r\n                                            this.setState({\r\n                                                body: \"\",\r\n                                                answerA: \"\",\r\n                                                answerB: \"\",\r\n                                                answerC: \"\",\r\n                                                answerD: \"\",\r\n                                                properAnswer: \"\",\r\n                                                category: \"\",\r\n                                                userAnswer: \"\",\r\n                                                points: 0,\r\n                                                totalPoints: 0,\r\n                                                currentQuestion: 0,\r\n                                                currentAnswer: 0,\r\n                                                isAnswered: false,\r\n                                                canSpeak: false,\r\n                                                canReceiveTest: true\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(new SpeechSynthesisUtterance('Błędna odpowiedź.'));\r\n                                    }, 500);\r\n                                    this.setState({\r\n                                        currentQuestion: this.state.currentQuestion + 1,\r\n                                        isAnswered: false\r\n                                    })\r\n                                    if (this.state.currentQuestion <= test.length - 1) {\r\n                                        speech.cancel();\r\n                                        setTimeout(() => {\r\n                                            speech.speak(new SpeechSynthesisUtterance('Kliknij spację aby usłyszeć kolejne pytanie'));\r\n                                        }, 500);\r\n                                        this.serveQuestion(test);\r\n                                    } else {\r\n                                        this.setState({\r\n                                            currentQuestion: this.state.currentQuestion - 1\r\n                                        })\r\n                                        speech.cancel();\r\n                                        let points = this.state.points;\r\n                                        let totalPoints = test.length;\r\n                                        setTimeout(() => {\r\n                                            speech.speak(new SpeechSynthesisUtterance(`Koniec testu. Twój wynik to ${points} na ${totalPoints} ${this.state.speakTotalPoints}. Wynik został przesłany do nauczyciela. Interakcja z testem została zablokowana!`));\r\n                                        }, 500);\r\n                                        let currentDate = getTime();\r\n                                        if (this._isMounted) {\r\n                                            let savingResultProcess = await axios.post('/saveResult', {\r\n                                                login: this.state.login,\r\n                                                category: this.state.category,\r\n                                                points: this.state.points,\r\n                                                totalPoints: totalPoints,\r\n                                                percent: Math.round((this.state.points / test.length) * 100) + '%',\r\n                                                date: currentDate\r\n                                            })\r\n                                            savingResultProcess.data.done && this.props.socket.emit('sendResult', {\r\n                                                login: this.state.login,\r\n                                            })\r\n                                            this.setState({\r\n                                                body: \"\",\r\n                                                answerA: \"\",\r\n                                                answerB: \"\",\r\n                                                answerC: \"\",\r\n                                                answerD: \"\",\r\n                                                properAnswer: \"\",\r\n                                                category: \"\",\r\n                                                userAnswer: \"\",\r\n                                                points: 0,\r\n                                                totalPoints: 0,\r\n                                                currentQuestion: 0,\r\n                                                currentAnswer: 0,\r\n                                                isAnswered: false,\r\n                                                canSpeak: false,\r\n                                                canReceiveTest: true\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (this.state.option === \"voice\") {\r\n\r\n                    window.SpeechRecognition = window.webkitSpeechRecognition || window.SpeechRecognition;\r\n                    let recognition = new window.SpeechRecognition();\r\n                    recognition.lang = 'pl-PL';\r\n\r\n                    if (this.state.currentQuestion === 0) {\r\n                        setTimeout(() => {\r\n                            speech.speak(voiceOptionMessage);\r\n                        }, 500);\r\n                    }\r\n\r\n                    document.body.onkeyup = (e) => {\r\n                        if (this.state.canSpeak) {\r\n                            if (e.keyCode === 70) {\r\n                                if (this.state.canHear) {\r\n                                    recognition.start();\r\n                                }\r\n                                this.setState({\r\n                                    canHear: false\r\n                                })\r\n                            }\r\n                            if (e.keyCode === 86) {\r\n                                recognition.stop();\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    recognition.onend = () => {\r\n                        this.setState({\r\n                            canHear: true\r\n                        })\r\n                    }\r\n\r\n                    recognition.onresult = async (e) => {\r\n\r\n                        let transcript = e.results[0][0].transcript;\r\n                        let lowerCaseTranscript = transcript.toString().toLowerCase();\r\n                        console.log(lowerCaseTranscript);\r\n\r\n                        if (this.state.canSpeak) {\r\n\r\n                            if (lowerCaseTranscript === \"odpowiedź a\") {\r\n                                speech.cancel();\r\n                                this.setState({\r\n                                    userAnswer: 'A',\r\n                                    isAnswered: true\r\n                                })\r\n                                setTimeout(() => {\r\n                                    speech.speak(new SpeechSynthesisUtterance('Wybrałeś odpowiedź A, kliknij F na klawiaturze i powiedz \"zatwierdź\" aby zatwierdzić odpowiedź'));\r\n                                }, 500);\r\n                            }\r\n\r\n                            if (lowerCaseTranscript === \"odpowiedź b\") {\r\n                                speech.cancel();\r\n                                this.setState({\r\n                                    userAnswer: 'B',\r\n                                    isAnswered: true\r\n                                })\r\n                                setTimeout(() => {\r\n                                    speech.speak(new SpeechSynthesisUtterance('Wybrałeś odpowiedź B, kliknij F na klawiaturze i powiedz \"zatwierdź\" aby zatwierdzić odpowiedź'));\r\n                                }, 500);\r\n                            }\r\n\r\n                            if (lowerCaseTranscript === \"odpowiedź c\") {\r\n                                speech.cancel();\r\n                                this.setState({\r\n                                    userAnswer: 'C',\r\n                                    isAnswered: true\r\n                                })\r\n                                setTimeout(() => {\r\n                                    speech.speak(new SpeechSynthesisUtterance('Wybrałeś odpowiedź C, kliknij F na klawiaturze i powiedz \"zatwierdź\" aby zatwierdzić odpowiedź'));\r\n                                }, 500);\r\n                            }\r\n\r\n                            if (lowerCaseTranscript === \"odpowiedź d\") {\r\n                                speech.cancel();\r\n                                this.setState({\r\n                                    userAnswer: 'D',\r\n                                    isAnswered: true\r\n                                })\r\n                                setTimeout(() => {\r\n                                    speech.speak(new SpeechSynthesisUtterance('Wybrałeś odpowiedź D, kliknij F na klawiaturze i powiedz \"zatwierdź\" aby zatwierdzić odpowiedź'));\r\n                                }, 500);\r\n                            }\r\n\r\n                            if (lowerCaseTranscript === \"pytanie\") {\r\n                                speech.cancel();\r\n                                setTimeout(() => {\r\n                                    speech.speak(voiceMessages[0]);\r\n                                }, 500);\r\n                            }\r\n\r\n                            if (lowerCaseTranscript === \"kolejna odpowiedź\") {\r\n                                this.setState({\r\n                                    currentAnswer: this.state.currentAnswer + 1\r\n                                })\r\n                                console.log(this.state.currentAnswer);\r\n                                if (this.state.currentAnswer === 1) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(messageANSWER_A);\r\n                                    }, 500);\r\n                                }\r\n                                else if (this.state.currentAnswer === 2) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(messageANSWER_B);\r\n                                    }, 500);\r\n                                }\r\n                                else if (this.state.currentAnswer === 3) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(messageANSWER_C);\r\n                                    }, 500);\r\n                                }\r\n                                else if (this.state.currentAnswer === 4) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(messageANSWER_D);\r\n                                    }, 500);\r\n                                } else {\r\n                                    if (this.state.currentAnswer > 4) {\r\n                                        speech.cancel();\r\n                                        setTimeout(() => {\r\n                                            speech.speak(messageANSWER_A);\r\n                                        }, 500);\r\n                                        this.setState({\r\n                                            currentAnswer: 1\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (lowerCaseTranscript === \"poprzednia odpowiedź\") {\r\n                                this.setState({\r\n                                    currentAnswer: this.state.currentAnswer - 1\r\n                                })\r\n                                console.log(this.state.currentAnswer);\r\n                                if (this.state.currentAnswer === 1) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(messageANSWER_A);\r\n                                    }, 500);\r\n                                }\r\n                                else if (this.state.currentAnswer === 2) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(messageANSWER_B);\r\n                                    }, 500);\r\n                                }\r\n                                else if (this.state.currentAnswer === 3) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(messageANSWER_C);\r\n                                    }, 500);\r\n                                }\r\n                                else if (this.state.currentAnswer === 4) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(messageANSWER_D);\r\n                                    }, 500);\r\n                                } else {\r\n                                    if (this.state.currentAnswer < 1) {\r\n                                        speech.cancel();\r\n                                        setTimeout(() => {\r\n                                            speech.speak(messageANSWER_A);\r\n                                        }, 500);\r\n                                        this.setState({\r\n                                            currentAnswer: 1\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (lowerCaseTranscript === \"instrukcja\") {\r\n                                speech.cancel();\r\n                                setTimeout(() => {\r\n                                    speech.speak(voiceOptionMessage);\r\n                                }, 500);\r\n                            }\r\n                        } else {\r\n                            if (lowerCaseTranscript === \"instrukcja\") {\r\n                                speech.cancel();\r\n                                setTimeout(() => {\r\n                                    speech.speak(new SpeechSynthesisUtterance('Test dobiegł końca. Interakcja z testem została zablokowana!'));\r\n                                }, 500);\r\n                            }\r\n                        }\r\n\r\n                        if (this.state.isAnswered) {\r\n\r\n                            if (lowerCaseTranscript === \"zatwierdź\") {\r\n\r\n                                if (this.state.userAnswer === this.state.properAnswer) {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(new SpeechSynthesisUtterance('Poprawna odpowiedź.'));\r\n                                    }, 500);\r\n                                    this.setState({\r\n                                        points: this.state.points + 1,\r\n                                        currentQuestion: this.state.currentQuestion + 1,\r\n                                        isAnswered: false\r\n                                    })\r\n                                    if (this.state.currentQuestion <= test.length - 1) {\r\n                                        speech.cancel();\r\n                                        setTimeout(() => {\r\n                                            speech.speak(new SpeechSynthesisUtterance('Kliknij F na klawiaturze i powiedz \"pytanie\" aby usłyszeć kolejne pytanie'));\r\n                                        }, 500);\r\n                                        this.serveQuestion(test);\r\n                                    } else {\r\n                                        this.setState({\r\n                                            currentQuestion: this.state.currentQuestion - 1\r\n                                        })\r\n                                        speech.cancel();\r\n                                        let points = this.state.points;\r\n                                        let totalPoints = test.length;\r\n                                        setTimeout(() => {\r\n                                            speech.speak(new SpeechSynthesisUtterance(`Koniec testu. Twój wynik to ${points} na ${totalPoints} ${this.state.speakTotalPoints}. Wynik został przesłany do nauczyciela. Interakcja z testem została zablokowana!`));\r\n                                        }, 500);\r\n                                        let currentDate = getTime();\r\n                                        if (this._isMounted) {\r\n                                            let savingResultProcess = await axios.post('/saveResult', {\r\n                                                login: this.state.login,\r\n                                                category: this.state.category,\r\n                                                points: this.state.points,\r\n                                                totalPoints: totalPoints,\r\n                                                percent: Math.round((this.state.points / test.length) * 100) + '%',\r\n                                                date: currentDate\r\n                                            })\r\n                                            savingResultProcess.data.done && this.props.socket.emit('sendResult', {\r\n                                                login: this.state.login,\r\n                                            })\r\n                                            this.setState({\r\n                                                body: \"\",\r\n                                                answerA: \"\",\r\n                                                answerB: \"\",\r\n                                                answerC: \"\",\r\n                                                answerD: \"\",\r\n                                                properAnswer: \"\",\r\n                                                category: \"\",\r\n                                                userAnswer: \"\",\r\n                                                points: 0,\r\n                                                totalPoints: 0,\r\n                                                currentQuestion: 0,\r\n                                                currentAnswer: 0,\r\n                                                isAnswered: false,\r\n                                                canSpeak: false,\r\n                                                canReceiveTest: true\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    speech.cancel();\r\n                                    setTimeout(() => {\r\n                                        speech.speak(new SpeechSynthesisUtterance('Błędna odpowiedź.'));\r\n                                    }, 500);\r\n                                    this.setState({\r\n                                        currentQuestion: this.state.currentQuestion + 1,\r\n                                        isAnswered: false\r\n                                    })\r\n                                    if (this.state.currentQuestion <= test.length - 1) {\r\n                                        speech.cancel();\r\n                                        setTimeout(() => {\r\n                                            speech.speak(new SpeechSynthesisUtterance('Kliknij F na klawiaturze i powiedz \"pytanie\" aby usłyszeć kolejne pytanie'));\r\n                                        }, 500);\r\n                                        this.serveQuestion(test);\r\n                                    } else {\r\n                                        this.setState({\r\n                                            currentQuestion: this.state.currentQuestion - 1\r\n                                        })\r\n                                        speech.cancel();\r\n                                        let points = this.state.points;\r\n                                        let totalPoints = test.length;\r\n                                        setTimeout(() => {\r\n                                            speech.speak(new SpeechSynthesisUtterance(`Koniec testu. Twój wynik to ${points} na ${totalPoints} ${this.state.speakTotalPoints}. Wynik został przesłany do nauczyciela. Interakcja z testem została zablokowana!`));\r\n                                        }, 500);\r\n                                        let currentDate = getTime();\r\n                                        if (this._isMounted) {\r\n                                            let savingResultProcess = await axios.post('/saveResult', {\r\n                                                login: this.state.login,\r\n                                                category: this.state.category,\r\n                                                points: this.state.points,\r\n                                                totalPoints: totalPoints,\r\n                                                percent: Math.round((this.state.points / test.length) * 100) + '%',\r\n                                                date: currentDate\r\n                                            })\r\n                                            savingResultProcess.data.done && this.props.socket.emit('sendResult', {\r\n                                                login: this.state.login,\r\n                                            })\r\n                                            this.setState({\r\n                                                body: \"\",\r\n                                                answerA: \"\",\r\n                                                answerB: \"\",\r\n                                                answerC: \"\",\r\n                                                answerD: \"\",\r\n                                                properAnswer: \"\",\r\n                                                category: \"\",\r\n                                                userAnswer: \"\",\r\n                                                points: 0,\r\n                                                totalPoints: 0,\r\n                                                currentQuestion: 0,\r\n                                                currentAnswer: 0,\r\n                                                isAnswered: false,\r\n                                                canSpeak: false,\r\n                                                canReceiveTest: true\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.props.socket.on('sendTest', (test) => {\r\n            if (this.state.canReceiveTest) {\r\n                this.serveQuestion(test);\r\n            }\r\n        })\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"menu\">\r\n                <div className=\"menu-list\">\r\n                    <ul className=\"menu-items\">\r\n                        <div className=\"buttons\">\r\n                            <div className=\"welcome\">\r\n                                Welcome {this.props.login}\r\n                            </div>\r\n                            <li><Logout /></li>\r\n                        </div>\r\n                        <div className=\"blind-student-info\">\r\n                            {this.state.body && <div className=\"alert alert-warning student-info\">{`Witaj! Twój nauczyciel wylosował Ci ${this.state.totalPoints} ${this.state.speakTotalQuestions}`}</div>}\r\n                            {this.state.option === \"keyboard\" ? <div>\r\n                                <div className=\"alert alert-warning student-info\">Aby odsłuchać wiadomość powitalną ponownie naciśnij klawisz R</div>\r\n                                <div className=\"alert alert-warning student-info\">Aby rozpocząć test odsłuchaj pierwsze pytanie klikając spację.</div>\r\n                                <div className=\"alert alert-warning student-info\">Po zatwierdzeniu każdej udzielonej odpowiedzi otrzymasz informację czy była ona błędna czy poprawna. Kolejne pytanie wywołaj klawiszem spacja</div>\r\n                                <div className=\"alert alert-warning student-info\">Aby poruszać się pomiędzy odpowiedziami steruj klawiszami W oraz S. </div>\r\n                                <div className=\"alert alert-warning student-info\">Aby wybrać odpowiedź klikaj odpowiednio klawisze A, B, C lub D.</div>\r\n                                <div className=\"alert alert-warning student-info\">Aby zatwierdzić swoją odpowiedź kliknij klawisz ENTER.</div>\r\n                                <div className=\"alert alert-warning student-info\">Aby przerwać czytanie użyj klawisza X.</div>\r\n                                <div className=\"alert alert-warning student-info\">Gdy test dobiegnie końca zostaniesz o tym poinformowany!</div>\r\n                            </div> : this.state.option === \"voice\" ? <div>\r\n                                <div className=\"alert alert-warning student-info\">Aby korzystać z funkcji sterowania głosem musisz mówić płynnie i wyraźnie. W przypadku nieuzyskania żadnej odpowiedzi kliknij ponownie F i powiedz komendę.</div>\r\n                                <div className=\"alert alert-warning student-info\">Aby odsłuchać wiadomość powitalną ponownie naciśnij F na klawiaturze i powiedz \"instrukcja\".</div>\r\n                                <div className=\"alert alert-warning student-info\">Aby rozpocząć test odsłuchaj pierwsze pytanie klikając F na klawiaturze i powiedz \"pytanie\".</div>\r\n                                <div className=\"alert alert-warning student-info\">Po zatwierdzeniu każdej udzielonej odpowiedzi otrzymasz informację czy była ona błędna czy poprawna. Kolejne pytanie wywołaj klikając przycisk F i powiedz \"pytanie\".</div>\r\n                                <div className=\"alert alert-warning student-info\">Aby poruszać się pomiędzy odpowiedziami kliknij F i powiedz \"kolejna odpowiedź\" lub \"poprzednia odpowiedź\".</div>\r\n                                <div className=\"alert alert-warning student-info\">Aby wybrać odpowiedź kliknij klawisz F i powiedz odpowiednio \"odpowiedź a\", \"odpowiedź b\", \"odpowiedź c\", \"odpowiedź d\".</div>\r\n                                <div className=\"alert alert-warning student-info\">Aby zatwierdzić swoją odpowiedź kliknij klawisz F i powiedz \"zatwierdź\".</div>\r\n                                <div className=\"alert alert-warning student-info\">Gdy po kliknięciu klawisza F i powiedzenia poprawnej komendy nie usłyszysz żadnej odpowiedzi, musisz powtórzyć kliknięcie F oraz powiedzenie komendy na nowo.</div>\r\n                                <div className=\"alert alert-warning student-info\">Gdy test dobiegnie końca zostaniesz o tym poinformowany!</div>\r\n                            </div> : <div>\r\n                                        <div className=\"alert alert-success student-info\">Instrukcje dla opcji rozwiązywania testu za pomocą klawiatury</div>\r\n                                        <div className=\"alert alert-warning student-info\">Aby odsłuchać wiadomość powitalną ponownie naciśnij klawisz R</div>\r\n                                        <div className=\"alert alert-warning student-info\">Aby rozpocząć test odsłuchaj pierwsze pytanie klikając spację.</div>\r\n                                        <div className=\"alert alert-warning student-info\">Po zatwierdzeniu każdej udzielonej odpowiedzi otrzymasz informację czy była ona błędna czy poprawna. Kolejne pytanie wywołaj klawiszem spacja</div>\r\n                                        <div className=\"alert alert-warning student-info\">Aby poruszać się pomiędzy odpowiedziami steruj klawiszami W oraz S. </div>\r\n                                        <div className=\"alert alert-warning student-info\">Aby wybrać odpowiedź klikaj odpowiednio klawisze A, B, C lub D.</div>\r\n                                        <div className=\"alert alert-warning student-info\">Aby zatwierdzić swoją odpowiedź kliknij klawisz ENTER.</div>\r\n                                        <div className=\"alert alert-warning student-info\">Aby przerwać czytanie użyj klawisza X.</div>\r\n                                        <div className=\"alert alert-warning student-info\">Gdy test dobiegnie końca zostaniesz o tym poinformowany!</div>\r\n                                        <div className=\"alert alert-success student-info\">Instrukcje dla opcji rozwiązywania testu za pomocą głosu</div>\r\n                                        <div className=\"alert alert-warning student-info\">Aby korzystać z funkcji sterowania głosem musisz mówić płynnie i wyraźnie. W przypadku nieuzyskania żadnej odpowiedzi kliknij ponownie F i powiedz komendę.</div>\r\n                                        <div className=\"alert alert-warning student-info\">Aby odsłuchać wiadomość powitalną ponownie naciśnij F na klawiaturze i powiedz \"instrukcja\".</div>\r\n                                        <div className=\"alert alert-warning student-info\">Aby rozpocząć test odsłuchaj pierwsze pytanie klikając F na klawiaturze i powiedz \"pytanie\".</div>\r\n                                        <div className=\"alert alert-warning student-info\">Po zatwierdzeniu każdej udzielonej odpowiedzi otrzymasz informację czy była ona błędna czy poprawna. Kolejne pytanie wywołaj klikając przycisk F i powiedz \"pytanie\".</div>\r\n                                        <div className=\"alert alert-warning student-info\">Aby poruszać się pomiędzy odpowiedziami kliknij F i powiedz \"kolejna odpowiedź\" lub \"poprzednia odpowiedź\".</div>\r\n                                        <div className=\"alert alert-warning student-info\">Aby wybrać odpowiedź kliknij klawisz F i powiedz odpowiednio \"odpowiedź a\", \"odpowiedź b\", \"odpowiedź c\", \"odpowiedź d\".</div>\r\n                                        <div className=\"alert alert-warning student-info\">Aby zatwierdzić swoją odpowiedź kliknij klawisz F i powiedz \"zatwierdź\".</div>\r\n                                        <div className=\"alert alert-warning student-info\">Gdy po kliknięciu klawisza F i powiedzenia poprawnej komendy nie usłyszysz żadnej odpowiedzi, musisz powtórzyć kliknięcie F oraz powiedzenie komendy na nowo.</div>\r\n                                        <div className=\"alert alert-warning student-info\">Gdy test dobiegnie końca zostaniesz o tym poinformowany!</div>\r\n                                    </div>}\r\n                        </div>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"questions blindStudentQuestions center\">\r\n                    {this.state.body === \"\" ? <div>Please wait...</div> : <div className=\"question blindStudentQuestion\">\r\n                        <div className=\"body alert alert-dark font-weight-bold\">{this.state.currentQuestion + 1 + \". \" + this.state.body}</div>\r\n                        <div className=\"aswer alert alert-success\">{\"A. \" + this.state.answerA}</div>\r\n                        <div className=\"aswer alert alert-success\">{\"B. \" + this.state.answerB}</div>\r\n                        <div className=\"aswer alert alert-success\">{\"C. \" + this.state.answerC}</div>\r\n                        <div className=\"aswer alert alert-success\">{\"D. \" + this.state.answerD}</div>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BlindStudentHome","import React, { Component } from 'react'\r\nimport BlindStudentHome from './BlindStudentHome'\r\nimport io from 'socket.io-client'\r\n\r\nexport class BlindStudent extends Component {\r\n    state = {\r\n        socket: \"\"\r\n    }\r\n    componentWillMount() {\r\n        const socket = io('/blindStudent');\r\n        this.setState({ socket });\r\n    }\r\n    componentDidMount() {\r\n        this.state.socket.emit('login', {\r\n            login: this.props.login,\r\n            type: this.props.type\r\n        })\r\n    }\r\n    componentWillUnmount() {\r\n        this.state.socket.emit('logout', {\r\n            login: this.props.login,\r\n            type: this.props.type\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"blindstudent flexfullwh\">\r\n                <BlindStudentHome socket={this.state.socket} login={this.props.login} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BlindStudent\r\n","import React, { Component } from 'react'\r\n\r\nexport class Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"loading\">\r\n                <div className=\"wave\"></div>\r\n                <div className=\"wave\"></div>\r\n                <div className=\"wave\"></div>\r\n                <div className=\"wave\"></div>\r\n                <div className=\"wave\"></div>\r\n                <div className=\"wave\"></div>\r\n                <div className=\"wave\"></div>\r\n                <div className=\"wave\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { getJwt } from '../../helpers/getJwt'\r\n\r\nimport Teacher from './Teacher/Teacher'\r\nimport Student from './Student/Student'\r\nimport BlindStudent from './BlindStudent/BlindStudent'\r\nimport Loading from '../loading/Loading'\r\n\r\nexport class Account extends Component {\r\n    _isMounted = false;\r\n    state = {\r\n        login: \"\",\r\n        type: \"\"\r\n    }\r\n    async componentDidMount() {\r\n        this._isMounted = true;\r\n        const jwt = getJwt();\r\n        if (!jwt) {\r\n            this.props.history.push('/')\r\n        } else {\r\n            if (this._isMounted) {\r\n                const gettingUserProcess = await axios.get(\"/getUser\", { headers: { Authorization: `Bearer ${jwt}` } });\r\n                this.setState({\r\n                    login: gettingUserProcess.data.login,\r\n                    type: gettingUserProcess.data.type\r\n                })\r\n            }\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n    render() {\r\n        if (this._isMounted) {\r\n            return (\r\n                <div className=\"account\">\r\n                    {this.state.type === 'teacher' ? <Teacher login={this.state.login} type={this.state.type} /> : this.state.type === 'student' ? <Student login={this.state.login} type={this.state.type} /> : this.state.type === 'blind-student' ? <BlindStudent login={this.state.login} type={this.state.type} /> : null}\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <Loading />\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Account\r\n","import React, { Component } from 'react'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nexport class Back extends Component {\r\n    handleClick = (where) => {\r\n        this.props.history.push(where);\r\n    }\r\n    render() {\r\n        return (\r\n            <button className=\"btn btn-dark\" onClick={() => this.handleClick(this.props.where)}>Back</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Back)\r\n","import React, { Component } from 'react'\r\nimport Back from '../Buttons/Back'\r\nimport Logout from '../Buttons/Logout'\r\n\r\nexport class Add extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"menu\">\r\n                <div className=\"menu-list\">\r\n                    <ul className=\"menu-items\">\r\n                        <div className=\"buttons\">\r\n                            <li><Logout /></li>\r\n                            <li><Back where=\"/account\" /></li>\r\n                        </div>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"center\">\r\n                    <div className=\"mainform\">\r\n                        <form className=\"form-group\" onSubmit={this.props.handleSubmit}>\r\n                            <input id=\"body\" className=\"form-control mt-3\" name=\"body\" placeholder=\"Type your question...\" type=\"text\" onChange={this.props.handleChange} /> <br />\r\n                            {this.props.errorBODY && <div className=\"alert alert-danger\">{this.props.errorBODY}</div>}\r\n                            <input id=\"answerA\" className=\"form-control\" name=\"answerA\" placeholder=\"Give answer A...\" type=\"text\" onChange={this.props.handleChange} /> <br />\r\n                            {this.props.errorANSWER_A && <div className=\"alert alert-danger\">{this.props.errorANSWER_A}</div>}\r\n                            <input id=\"answerB\" className=\"form-control\" name=\"answerB\" placeholder=\"Give answer B...\" type=\"text\" onChange={this.props.handleChange} /> <br />\r\n                            {this.props.errorANSWER_B && <div className=\"alert alert-danger\">{this.props.errorANSWER_B}</div>}\r\n                            <input id=\"answerC\" className=\"form-control\" name=\"answerC\" placeholder=\"Give answer C...\" type=\"text\" onChange={this.props.handleChange} /> <br />\r\n                            {this.props.errorANSWER_C && <div className=\"alert alert-danger\">{this.props.errorANSWER_C}</div>}\r\n                            <input id=\"answerD\" className=\"form-control\" name=\"answerD\" placeholder=\"Give answer D...\" type=\"text\" onChange={this.props.handleChange} /> <br />\r\n                            {this.props.errorANSWER_D && <div className=\"alert alert-danger\">{this.props.errorANSWER_D}</div>}\r\n                            <select className=\"form-control\" onChange={this.props.handleSelectChange} name=\"properAnswer\">\r\n                                <option hidden>Choose proper answer...</option>\r\n                                <option name=\"category\" value=\"A\">A</option>\r\n                                <option name=\"category\" value=\"B\">B</option>\r\n                                <option name=\"category\" value=\"C\">C</option>\r\n                                <option name=\"category\" value=\"D\">D</option>\r\n                            </select> <br />\r\n                            {this.props.errorANSWER_PROPER && <div className=\"alert alert-danger\">{this.props.errorANSWER_PROPER}</div>}\r\n                            <select className=\"form-control\" onChange={this.props.handleSelectChange} name=\"category\">\r\n                                <option hidden>Choose category...</option>\r\n                                <option name=\"category\" value=\"EE14\">EE14</option>\r\n                                <option name=\"category\" value=\"EE13\">EE13</option>\r\n                                <option name=\"category\" value=\"EE12\">EE12</option>\r\n                                <option name=\"category\" value=\"EE09\">EE09</option>\r\n                                <option name=\"category\" value=\"EE08\">EE08</option>\r\n                            </select> <br />\r\n                            {this.props.errorCATEGORY && <div className=\"alert alert-danger\">{this.props.errorCATEGORY}</div>}\r\n                            {this.props.error && <div className=\"alert alert-warning\">{this.props.error}</div>}\r\n                            {this.props.success && <div className=\"alert alert-success\">{this.props.success}</div>}\r\n                            <input name=\"myImage\" type=\"file\" className=\"form-control-file\" onChange={this.props.handleFileChange} style={{ marginBottom: '-15px', marginTop: '20px' }} /> <br /> <br />\r\n                            <button type=\"submit\" className=\"btn btn-dark submit\">Submit</button> <br />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Add\r\n","import React, { Component } from 'react'\r\n\r\nimport AddQuestionForm from './AddQuestionForm'\r\nimport { getJwt } from '../../../helpers/getJwt'\r\nimport Validation from '../../../helpers/Validation';\r\n\r\nimport axios from 'axios'\r\n\r\nexport class AddQuestion extends Component {\r\n    _isMounted = false;\r\n    componentWillMount() {\r\n        if (!getJwt()) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n    state = {\r\n        body: \"\",\r\n        answerA: \"\",\r\n        answerB: \"\",\r\n        answerC: \"\",\r\n        answerD: \"\",\r\n        properAnswer: \"\",\r\n        category: \"\",\r\n        image: \"\",\r\n        errorBODY: \"\",\r\n        errorANSWER_A: \"\",\r\n        errorANSWER_B: \"\",\r\n        errorANSWER_C: \"\",\r\n        errorANSWER_D: \"\",\r\n        errorANSWER_PROPER: \"\",\r\n        errorCATEGORY: \"\",\r\n        errorIMAGEURL: \"\",\r\n        error: \"\",\r\n        success: \"\"\r\n    }\r\n    cancel = () => {\r\n        this.setState({\r\n            amount: \"\",\r\n            category: \"\",\r\n            questions: \"\"\r\n        })\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    handleSelectChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            image: e.target.files[0]\r\n        })\r\n    }\r\n    handleSubmit = async (e) => {\r\n\r\n        e.preventDefault();\r\n        const { body, answerA, answerB, answerC, answerD, properAnswer, category, image } = this.state;\r\n        const data = new FormData();\r\n        data.append('body', body);\r\n        data.append('answerA', answerA);\r\n        data.append('answerB', answerB);\r\n        data.append('answerC', answerC);\r\n        data.append('answerD', answerD);\r\n        data.append('properAnswer', properAnswer);\r\n        data.append('category', category);\r\n        data.append('myImage', image);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        };\r\n        const validation = Validation.newQuestionValidation(body, answerA, answerB, answerC, answerD, properAnswer, category)\r\n        this.setState(validation);\r\n\r\n        if (validation.isValid) {\r\n            if (this._isMounted) {\r\n                const savingTestProcess = await axios.post(\"/upload\", data, config);\r\n                savingTestProcess.data.done ? this.setState({ success: savingTestProcess.data.message, \"error\": \"\" }) || setTimeout(() => {\r\n                    this.props.history.push('/account')\r\n                }, 2500) : this.setState({ \"error\": savingTestProcess.data.message, \"success\": \"\" });\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"add flexfullwh\">\r\n                <AddQuestionForm\r\n                    handleChange={this.handleChange}\r\n                    handleSubmit={this.handleSubmit}\r\n                    handleSelectChange={this.handleSelectChange}\r\n                    handleFileChange={this.handleFileChange}\r\n                    handleImage={this.handleImage}\r\n                    errorBODY={this.state.errorBODY}\r\n                    errorANSWER_A={this.state.errorANSWER_A}\r\n                    errorANSWER_B={this.state.errorANSWER_B}\r\n                    errorANSWER_C={this.state.errorANSWER_C}\r\n                    errorANSWER_D={this.state.errorANSWER_D}\r\n                    errorANSWER_PROPER={this.state.errorANSWER_PROPER}\r\n                    errorCATEGORY={this.state.errorCATEGORY}\r\n                    errorIMAGEURL={this.state.errorIMAGEURL}\r\n                    success={this.state.success}\r\n                    error={this.state.error}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddQuestion\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\n\r\nimport Login from './components/login/Login'\r\nimport Register from './components/register/Register'\r\nimport Account from './components/account/Account';\r\nimport AddQuestion from './components/account/Teacher/AddQuestion';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"tests-management-application\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Login} />\r\n            <Route path=\"/register\" component={Register} />\r\n            <Route path=\"/account\" component={Account} />\r\n            <Route path=\"/add\" component={AddQuestion} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}